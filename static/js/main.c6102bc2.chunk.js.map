{"version":3,"sources":["core/layout/AppThemeProvider.js","modules/auth/AuthInit.js","core/animated-routes/AnimatedRouter.js","constants/menu.ts","theme/assets/media/svg/Home/Home.svg","theme/assets/media/svg/Shopping/Box3.svg","theme/assets/media/svg/General/User.svg","services/app.service.js","redux/handlers/app.ts","redux/reducers/appReducer.js","theme/assets/media/svg/Navigation/Angle-double-left.svg","modules/main/brand/Brand.js","modules/main/aside-menu/AsideMenuList.js","modules/main/aside-menu/AsideMenu.js","theme/assets/media/svg/Home/Door-open.svg","modules/main/aside/Aside.js","modules/main/Main.js","redux/reducers/authReducer.js","modules/auth/pages/Login.js","modules/auth/pages/login.controller.js","modules/Routes.js","core/i18n/i18nProvider.js","App.tsx","configs/axios.config.js","reportWebVitals.ts","redux/rootReducer.js","redux/rootSaga.js","redux/configureStore.js","index.tsx"],"names":["theme","createMuiTheme","typography","fontFamily","join","palette","primary","main","secondary","error","props","MuiButtonBase","disableRipple","MuiPopover","elevation","AppThemeProvider","children","ThemeProvider","AuthInit","AnimatedRouter","wrapper","useRef","useEffect","wrapperDiv","current","classList","add","remove","className","ref","MENU","id","label","route","icon","display","loadAppMenu","Promise","resolve","filter","m","handleLoadAppMenu","call","menus","put","setSidebarMenu","saga","actionTypes","type","initialState","isSidebarCollapsed","reducer","state","action","takeLatest","Brand","dispatch","useDispatch","isSideBarCollapsed","useSelector","app","toggleCollapse","to","onClick","fontSize","src","btnArrowSvg","AsideMenuList","map","i","AsideMenu","Aside","history","useHistory","push","logoutSVG","Main","Login","Logout","SetUser","initialAuthState","user","undefined","authToken","persistReducer","storage","key","whitelist","payload","actions","loginSaga","initialValues","email","password","injectIntl","fieldname","intl","useState","loading","setLoading","LoginSchema","Yup","shape","required","formatMessage","formik","useFormik","validationSchema","onSubmit","values","a","setStatus","setSubmitting","auth","e","preventDefault","handleSubmit","status","animationIn","animationOut","animationInDuration","animationOutDuration","isVisible","autoComplete","placeholder","touched","errors","name","getFieldProps","Routes","isAuthorized","shallowEqual","path","allMessages","en","I18nProvider","messages","locale","App","basename","setupAxios","axios","store","interceptors","request","use","config","getState","headers","Authorization","err","reject","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","watcherSaga","all","sagaMiddleware","createSagaMiddleware","middleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","persistor","persistStore","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6102bc2.chunk.js","sourcesContent":["import { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: [\"Poppins\"].join(\",\")\n    },\n    palette: {\n        primary: {\n            main: \"#17c191\"\n        },\n        secondary: {\n            main: \"#3783e7\"\n        },\n        error: {\n            main: \"#f018a6\"\n        }\n    },\n    props: {\n        MuiButtonBase: {\n            disableRipple: false // No more ripple, on the whole application 💣!\n        },\n        MuiPopover: {\n            elevation: 1\n        }\n    }\n});\n\nexport const AppThemeProvider = ({children}) => <ThemeProvider theme={theme}>{children}</ThemeProvider>","const AuthInit = ({ children }) => {\n    return children;\n}\n\nexport default AuthInit;","\nimport { useEffect, useRef } from \"react\";\n\nconst AnimatedRouter = ({\n    children\n}) => {\n\n    const wrapper = useRef();\n\n    useEffect(() => {\n        const wrapperDiv = wrapper.current;\n        wrapperDiv.classList.add('in');\n        return () => {\n            wrapperDiv.classList.remove('in');\n        }\n    }, []);\n\n\n    return (\n        <div className=\"route-wrapper d-flex flex-column flex-root\" ref={wrapper}>\n            <div className=\"route-wrapper--content d-flex flex-column flex-root\">\n                {children}\n            </div>\n        </div>\n    );\n}\n\nexport default AnimatedRouter;","import homeSVG from '../theme/assets/media/svg/Home/Home.svg';\nimport bookingSVG from '../theme/assets/media/svg/Shopping/Box3.svg';\nimport profileSVG from '../theme/assets/media/svg/General/User.svg';\n\nexport const MENU = [{\n    id: '_dashboard',\n    label: 'Dashboard',\n    route: \"/dashboard\",\n    icon: homeSVG\n}, {\n    id: '_bookings_',\n    label: 'Booking',\n    route: \"/booking\",\n    display: false,\n    icon: bookingSVG\n}, {\n    id: \"_profile\",\n    label: \"Profile\",\n    route: \"/profile\",\n    icon: profileSVG\n}]","export default __webpack_public_path__ + \"static/media/Home.e0e99612.svg\";","export default __webpack_public_path__ + \"static/media/Box3.b02a4052.svg\";","export default __webpack_public_path__ + \"static/media/User.898f25aa.svg\";","import filter from 'lodash/filter';\nimport { MENU } from \"../constants/menu\";\n\nexport function loadAppMenu() {\n    return Promise.resolve(filter(MENU, m => m.display !== false));\n}","import { call, put } from 'redux-saga/effects';\nimport { loadAppMenu } from 'services/app.service';\nimport { setSidebarMenu } from '../reducers/appReducer';\n\nexport function* handleLoadAppMenu(): any {\n    const menus = yield call(loadAppMenu);\n    yield put(setSidebarMenu(menus));\n}","import { takeLatest } from \"@redux-saga/core/effects\";\nimport { handleLoadAppMenu } from \"redux/handlers/app\";\n\nexport const actionTypes = {\n    FetchSideBarMenu: \"[FetchSidebar] Action\",\n    GetSideBarMenu: \"[GetSidebar] Action\",\n    SetSideBarMenu: \"[SetSidebar] Action\",\n    SetIsSideBarCollapsed: \"[SetSideBarCollapseState] Action\"\n}\n\nexport const fetchSidebarMenu = () => ({\n    type: actionTypes.FetchSideBarMenu\n});\n\n\nexport const setSidebarMenu = (menus) => ({\n    type: actionTypes.SetSideBarMenu,\n    menus\n});\n\nexport const setIsSidebarCollapsed = (isSidebarCollapsed) => ({\n    type: actionTypes.SetIsSideBarCollapsed,\n    isSidebarCollapsed\n});\n\nconst initialState = {\n    menus: [],\n    isSidebarCollapsed: false\n};\n\n\nexport const reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.SetSideBarMenu:\n            const { menus } = action;\n            return { ...state, menus };\n        case actionTypes.SetIsSideBarCollapsed:\n            const { isSidebarCollapsed } = action;\n            return { ...state, isSidebarCollapsed };\n        default:\n            return state;\n    }\n}\n\nexport function* saga() {\n    yield takeLatest(actionTypes.FetchSideBarMenu, handleLoadAppMenu);\n}\n\nexport default reducer;","export default __webpack_public_path__ + \"static/media/Angle-double-left.217d7106.svg\";","import { Link } from \"react-router-dom\";\nimport SVG from \"react-inlinesvg\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { setIsSidebarCollapsed } from \"redux/reducers/appReducer\";\n\nimport btnArrowSvg from '../../../theme/assets/media/svg/Navigation/Angle-double-left.svg';\n\nconst Brand = () => {\n\n    const dispatch = useDispatch();\n\n    const isSideBarCollapsed = useSelector(state => state.app.isSidebarCollapsed);\n\n    const toggleCollapse = () => {\n        dispatch(setIsSidebarCollapsed(!isSideBarCollapsed));\n    }\n\n    return (\n        <div className=\"brand flex-column-auto\">\n            <Link to=\"\" className=\"brand--logo\">\n                <span>APP</span>\n            </Link>\n\n            <button className=\"brand--toggle btn btn-sm px-0\" onClick={() => toggleCollapse()}>\n                <span className=\"svg-icon svg-icon-xl\">\n                    <SVG fontSize={isSideBarCollapsed ? '20px' : '24px'} src={btnArrowSvg} />\n                </span>\n            </button>\n        </div>\n    );\n}\n\nexport default Brand;","import { NavLink } from \"react-router-dom\";\n\nimport SVG from \"react-inlinesvg\";\n\nconst AsideMenuList = ({ menus }) => {\n    return (\n        <>\n            <ul className=\"menu-nav\">\n                {\n                    menus.map((m, i) => (\n                        <li key={i} className=\"menu-item\">\n                            <NavLink className=\"menu-link\" to={m.route}>\n                                <span className=\"svg-icon menu-icon\">\n                                    <SVG src={m.icon} />\n                                </span>\n                                <span className=\"menu-text\">{m.label}</span>\n                            </NavLink>\n                        </li>\n                    ))\n                }\n            </ul>\n        </>\n    );\n}\n\nexport default AsideMenuList;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchSidebarMenu } from \"redux/reducers/appReducer\";\nimport AsideMenuList from \"./AsideMenuList\";\n\nconst AsideMenu = () => {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchSidebarMenu());\n    }, []);\n\n\n    const menus = useSelector(state => state.app.menus) || [];\n\n    return (\n        <div className=\"aside-menu\">\n            <AsideMenuList menus={menus} />\n        </div>\n    );\n}\n\nexport default AsideMenu;","export default __webpack_public_path__ + \"static/media/Door-open.2ed3f761.svg\";","import { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport SVG from \"react-inlinesvg\";\n\nimport Brand from \"../brand/Brand\"\nimport AsideMenu from \"../aside-menu/AsideMenu\";\n\nimport logoutSVG from '../../../theme/assets/media/svg/Home/Door-open.svg';\n\nconst Aside = () => {\n\n    const history = useHistory();\n\n    const isSideBarCollapsed = useSelector(state => state.app.isSidebarCollapsed);\n\n    const logout = () => {\n        history.push('/auth/login');\n    }\n    return (\n        <div className={`aside d-flex flex-column flex-row-auto ` + (isSideBarCollapsed ? 'isCollapsed' : '')}>\n            <Brand />\n            <AsideMenu />\n            <div className=\"logout-ct d-flex flex-center\" onClick={() => logout()}>\n                <SVG src={logoutSVG} />\n                <span>Logout</span>\n            </div>\n        </div>\n    );\n}\n\nexport default Aside;","import Aside from \"./aside/Aside\"\n\nconst Main = () => {\n\n    return (\n        <div className=\"d-flex flex-column flex-root\">\n            <div className=\"d-flex flex-row flex-column-fluid page\">\n                <Aside />\n                I am dashboard\n                </div>\n        </div>\n    );\n}\n\nexport default Main;","import { put, takeLatest } from \"@redux-saga/core/effects\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nexport const actionTypes = {\n    Login: \"[Login] Action\",\n    Logout: \"[Logout] Action\",\n    SetUser: \"[Set User] Action\"\n}\n\nconst initialAuthState = {\n    user: undefined,\n    authToken: undefined\n};\n\nexport const reducer = persistReducer(\n    { storage, key: \"v1-auth\", whitelist: [\"authToken\", \"user\"] },\n    (state = initialAuthState, action) => {\n        switch (action.type) {\n            case actionTypes.Login: {\n                const { authToken } = action.payload;\n                return { authToken, user: undefined };\n            }\n\n            case actionTypes.Logout:\n                return initialAuthState;\n\n            case actionTypes.SetUser: {\n\n                const { user } = action.payload;\n                return { ...state, user: 'admin@demo.com' };\n            }\n\n            default:\n                return state;\n        }\n    }\n);\n\nexport const actions = {\n    login: (authToken) => ({ type: actionTypes.Login, payload: { authToken } }),\n    logout: () => ({ type: actionTypes.logout }),\n    setUser: (user) => ({ type: actionTypes.SetUser, payload: { user } })\n}\n\nexport function* saga() {\n    yield takeLatest(actionTypes.Login, function* loginSaga() {\n        yield put(actions.setUser({}));\n    })\n}\n\nexport default reducer;","import { Link } from \"react-router-dom\";\n\nimport { useFormik } from \"formik\";\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { FormattedMessage, injectIntl } from \"react-intl\";\n\nimport { Animated } from \"react-animated-css\";\n\nimport * as Yup from \"yup\";\n\nimport * as auth from '../../../redux/reducers/authReducer';\nimport { login } from \"./login.controller\";\n\nconst initialValues = {\n    email: \"admin@demo.com\",\n    password: \"demo\",\n};\n\n\nconst Login = ({ intl }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [loading, setLoading] = useState(false);\n\n    const LoginSchema = Yup.object().shape({\n        email: Yup.string()\n            .email(\"Wrong email format\"),\n        password: Yup.string()\n            .required(\n                intl.formatMessage({ id: \"AUTH.VALIDATION.REQUIRED_FIELD\" })\n            )\n    });\n\n    const getInputClasses = (fieldname) => {\n        if (formik.touched[fieldname] && formik.errors[fieldname]) {\n            return \"is-invalid\";\n        }\n\n        if (formik.touched[fieldname] && !formik.errors[fieldname]) {\n            return \"is-valid\";\n        }\n\n        return \"\";\n    };\n\n    const enableLoading = () => {\n        setLoading(true);\n    }\n\n    const disableLoading = () => {\n        setLoading(false);\n    }\n\n\n    const formik = useFormik({\n        initialValues,\n        validationSchema: LoginSchema,\n        onSubmit: async (values, { setStatus, setSubmitting }) => {\n            enableLoading();\n            setStatus(false);\n            try {\n                const { authToken } = await login(values.email, values.password);\n\n                dispatch(auth.actions.login(authToken));\n\n                history.push('../../');\n\n            } catch (e) {\n                setStatus(intl.formatMessage({ id: \"AUTH.VALIDATION.INVALID_LOGIN\" }));\n            } finally {\n                disableLoading();\n                setSubmitting(false);\n            }\n\n        }\n    });\n\n    return (\n        <div className=\"d-flex flex-column flex-root\">\n            <div className=\"Login d-flex flex-column flex-lg-row flex-column-fluid bg-white\">\n                <div className=\"Login--aside d-flex flex-row-auto bgi-size-cover bgi-no-repeat p-10 p-lg-10\">\n\n                    <div className=\"flex-column-fluid d-flex flex-column justify-content-center\">\n                        <h3 className=\"font-size-h1 mb-5 text-white\">\n                            Awesome App\n                        </h3>\n                    </div>\n\n                </div>\n                <div className=\"Login--content d-flex flex-column flex-row-fluid flex-center p-7 position-relative\">\n                    <div className=\"text-center mb-10 mb-lg-20\">\n                        <h3 className=\"font-size-h1\">\n                            <FormattedMessage id=\"AUTH.LOGIN.TITLE\" />\n                        </h3>\n                        <p className=\"text-muted font-weight-bold\">\n                            Enter your username and password\n                        </p>\n                    </div>\n\n                    <form className=\"form\" onSubmit={(e) => { e.preventDefault(); formik.handleSubmit(e) }}>\n                        {\n                            formik.status ? (\n                                <Animated animationIn=\"bounceIn\" animationOut=\"fadeOut\" animationInDuration={1000} animationOutDuration={1000} isVisible={formik.status ? true : false}>\n                                    <div className=\"mb-10 alert alert-light-danger alert-dismissible\">\n                                        <div className=\"alert-text font-weight-bold\">{formik.status}</div>\n                                    </div>\n                                </Animated>\n                            ) : (\n                                formik.status ? (\n                                    <Animated animationIn=\"bounceIn\" animationOut=\"fadeOut\" animationInDuration={1000} animationOutDuration={1000} isVisible={formik.status ? true : false}>\n                                        <div className=\"mb-10 alert alert-light-info alert-dismissible\">\n                                            <div>\n                                                Use account <strong>admin@demo.com</strong> and password{\" \"} <strong>demo</strong> to continue.\n                                        </div>\n                                        </div>\n                                    </Animated>\n                                ) : ''\n                            )\n                        }\n\n                        <div className=\"form-group\">\n                            <input\n                                autoComplete=\"off\"\n                                placeholder=\"Email\"\n                                type=\"email\"\n                                className={`form-control form-control-solid h-auto py-5 px-6 ${getInputClasses(\n                                    \"email\"\n                                )}`}\n                                name=\"email\"\n                                {...formik.getFieldProps('email')} />\n\n                            <Animated\n                                animationIn=\"bounceIn\"\n                                animationOut=\"fadeOutDown\"\n                                isVisible={(formik.touched.email && formik.errors.email) ? true : false}>\n                                <div className=\"message-container\">\n                                    <div className=\"message-text\">{formik.errors.email}</div>\n                                </div>\n                            </Animated>\n\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                autoComplete=\"off\"\n                                placeholder=\"Password\"\n                                type=\"password\"\n                                className={`form-control form-control-solid h-auto py-5 px-6`}\n                                name=\"password\"\n                                {...formik.getFieldProps('password')} />\n                            <Animated\n                                animationIn=\"bounceIn\"\n                                animationOut=\"fadeOutDown\"\n                                isVisible={(formik.touched.password && formik.errors.password) ? true : false}>\n                                <div className=\"message-container\">\n                                    <div className=\"message-text\">{formik.errors.password}</div>\n                                </div>\n                            </Animated>\n                        </div>\n\n                        <div className=\"form-group d-flex flex-wrap justify-content-between align-items-center\">\n                            <Link\n                                to=\"/auth/forgot-password\"\n                                className=\"text-dark-50 text-hover-primary my-3 mr-2\">\n                                <FormattedMessage id=\"AUTH.GENERAL.FORGOT_BUTTON\" />\n                            </Link>\n                            <button className={` btn btn-primary font-weight-bold px-9 py-4 my-3`} type=\"submit\">\n                                <span>Sign In</span>\n                                {loading && <span className=\"ml-3 spinner spinner-white\"></span>}\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default injectIntl(Login);","export function login(email, password) {\n    return Promise.resolve({ authToken: 'abc123I' });\n}","import { Switch, Route, Redirect } from \"react-router-dom\";\nimport { shallowEqual, useSelector } from \"react-redux\";\n\n\nimport { AnimatedRouter } from '../core/animated-routes';\n\nimport Main from \"./main/Main\";\nimport Login from \"./auth/pages/Login\";\n\nconst Routes = () => {\n\n    const { isAuthorized } = useSelector(\n        ({ auth }) => ({\n            isAuthorized: auth.user != null,\n        }),\n        shallowEqual\n    );\n\n    return (\n\n        <Switch>\n\n            <Route path=\"/auth/login\">\n                <AnimatedRouter key={1}><Login /></AnimatedRouter>\n            </Route>\n            <Route path=\"/\">\n                <AnimatedRouter key={2}><Main /></AnimatedRouter>\n            </Route>\n            <Route path=\"/logout\" />\n            <Route path=\"/error\" />\n\n            {\n                !isAuthorized ? (\n                    <Redirect to=\"/auth/login\" />\n                ) : (\n                    <AnimatedRouter key={2}><Main /></AnimatedRouter>\n                )\n            }\n\n        </Switch>\n    )\n}\n\nexport default Routes;","import { IntlProvider } from \"react-intl\";\n\nimport enMessages from \"./messages/en\";\n\nconst allMessages = {\n    en: enMessages\n};\n\nexport function I18nProvider({ children }) {\n    const messages = allMessages['en'];\n\n    return (\n        <IntlProvider locale={'en'} messages={messages}>\n            {children}\n        </IntlProvider>\n    );\n}","import { BrowserRouter } from 'react-router-dom';\n\nimport { AppThemeProvider } from './core/layout/AppThemeProvider';\n\nimport AuthInit from './modules/auth/AuthInit';\nimport Routes from './modules/Routes';\nimport { I18nProvider } from './core/i18n/i18nProvider';\n\nconst App = () => {\n \n  return (\n    <BrowserRouter basename=\"/build\">\n      <AppThemeProvider>\n        <AuthInit>\n          <I18nProvider>\n            <Routes />\n          </I18nProvider>\n        </AuthInit>\n      </AppThemeProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const setupAxios = (axios, store) => {\n    axios.interceptors.request.use(config => {\n        const { auth: { authToken } } = store.getState();\n\n        if (authToken) {\n            config.headers.Authorization = `Bearer ${authToken}`\n        }\n\n        return config;\n    },\n        err => Promise.reject(err));\n}\n\nexport default setupAxios;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\n\nimport * as app from \"./reducers/appReducer\";\nimport * as auth from \"./reducers/authReducer\";\n\nexport const rootReducer = combineReducers({\n    app: app.reducer,\n    auth: auth.reducer\n});","import { all } from 'redux-saga/effects';\n\nimport * as auth from './reducers/authReducer';\nimport * as app from './reducers/appReducer';\n\nexport function* watcherSaga() {\n    yield all([app.saga(), auth.saga()])\n}","import createSagaMiddleware from \"redux-saga\";\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport {persistStore} from \"redux-persist\";\n\nimport { rootReducer } from \"./rootReducer\";\n\nimport { watcherSaga } from './rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middleware = [sagaMiddleware];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(rootReducer, {}, composeEnhancers(applyMiddleware(...middleware)));\n\nexport const persistor = persistStore(store);\n\nsagaMiddleware.run(watcherSaga);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport axios from 'axios';\n\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport './index.scss';\n\nimport App from './App';\n\n\nimport * as config from './configs';\n\nimport reportWebVitals from './reportWebVitals';\nimport store, { persistor } from './redux/configureStore';\n\nconfig.setupAxios(axios, store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}